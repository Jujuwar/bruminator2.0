<?php

namespace TeamBundle\Repository;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * TeamRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TeamRepository extends \Doctrine\ORM\EntityRepository
{
    public function search( $terms ) {
        $qb = $this->createQueryBuilder( 't' );

        $players = $this->getEntityManager()->getRepository( 'TeamBundle:Player' )->search( $terms );

        $teams = array();
        foreach( $players as $k => $v ){
            $teams[] = $v->getTeam()->getId();
        }

        if( $teams )
            $qb->orWhere( $qb->expr()->in( 't.id', $teams ) );

        for( $i = 0; $i < count( $terms ); $i++ )
            $qb->orWhere( 't.name LIKE ?'.$i );

        $qb->setParameters( $terms );

        return $qb->getQuery()->getResult();
    }

    public function getList( $page = 1, $maxPerPage = 9 ) {
        $qb = $this->createQueryBuilder( 't' );

        $qb->setFirstResult( ( $page - 1 ) * $maxPerPage )
            ->setMaxResults( $maxPerPage );

        return new Paginator( $qb );
    }

    public function resetRegistration() {
        $qb = $this->createQueryBuilder( 't' );

        $qb->update();
        $qb->set( 't.registered', '0' );

        return $qb->getQuery()->execute();
    }
}
